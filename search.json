[{"path":"https://rstudio.github.io/rsconnect/RELEASE.html","id":"release-instructions","dir":"","previous_headings":"","what":"Release instructions","title":"NA","text":"Create switch release branch (e.g. release/<version>). Update version DESCRIPTION file, necessary. Update NEWS.md. Confirm recent changes included. Update version header, necessary. Remove “(development version)” version header Commit NEWS.md DESCRIPTION changes. Check fix URLs (R): Generate release .tar.gz running following command parent directory rsconnect repository: Test package (also parent directory): Push branch GitHub let CI workflow run. Fix issues identified previous steps. Rinse repeat. Submit CRAN. Cross fingers. https://cran.r-project.org/ acceptance, squash--merge release/<version> branch back main. Create git tag new release push tag. Create GitHub release tag include NEWS.md items notes. Create branch bump development (e.g. development/<version>). Update DESCRIPTION bumping next version. Update NEWS.md version header next version. Squash--merge PR branch back main.","code":"git checkout -b release/0.8.26 git commit -m 'prepare for CRAN release' NEWS.md DESCRIPTION install.packages(\"urlchecker\") urlchecker::url_check() R CMD build rsconnect R CMD check --as-cran rsconnect_*.tar.gz git tag -a -m 'CRAN release: vX.Y.Z' vX.Y.Z COMMIT_HASH git push origin vX.Y.Z # rsconnect VERSION (development version)"},{"path":"https://rstudio.github.io/rsconnect/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Aron Atkins. Author, maintainer. Jonathan McPherson. Author. JJ Allaire. Author. Posit Software. Copyright holder, funder.","code":""},{"path":"https://rstudio.github.io/rsconnect/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Atkins , McPherson J, Allaire J (2023). rsconnect: Deployment Interface R Markdown Documents Shiny Applications. R package version 0.8.29, https://github.com/rstudio/rsconnect.","code":"@Manual{,   title = {rsconnect: Deployment Interface for R Markdown Documents and Shiny Applications},   author = {Aron Atkins and Jonathan McPherson and JJ Allaire},   year = {2023},   note = {R package version 0.8.29},   url = {https://github.com/rstudio/rsconnect}, }"},{"path":"https://rstudio.github.io/rsconnect/index.html","id":"rsconnect-","dir":"","previous_headings":"","what":"Deployment Interface for R Markdown Documents and Shiny Applications","title":"Deployment Interface for R Markdown Documents and Shiny Applications","text":"R package used deploying applications Posit Connect, ShinyApps.io, Posit Cloud.","code":""},{"path":"https://rstudio.github.io/rsconnect/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Deployment Interface for R Markdown Documents and Shiny Applications","text":"can install released version rsconnect CRAN : development version GitHub :","code":"install.packages(\"rsconnect\") # install.packages(\"devtools\") devtools::install_github(\"rstudio/rsconnect\")"},{"path":"https://rstudio.github.io/rsconnect/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Deployment Interface for R Markdown Documents and Shiny Applications","text":"get started using ShinyApps check Getting Started Guide. information using Posit Connect, see Posit Connect User Guide. Publishing Posit Cloud currently closed beta requires access enabled account Posit Cloud. Premium, Instructor, Organization account holders can request participate. See Posit Cloud’s Announcement information request access.","code":""},{"path":"https://rstudio.github.io/rsconnect/index.html","id":"legal-stuff","dir":"","previous_headings":"","what":"Legal Stuff","title":"Deployment Interface for R Markdown Documents and Shiny Applications","text":"TensorFlow, TensorFlow logo related marks trademarks Google Inc., affiliated Posit Software, PBC","code":""},{"path":"https://rstudio.github.io/rsconnect/reference/accountUsage.html","id":null,"dir":"Reference","previous_headings":"","what":"Show Account Usage — accountUsage","title":"Show Account Usage — accountUsage","text":"Show account usage","code":""},{"path":"https://rstudio.github.io/rsconnect/reference/accountUsage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show Account Usage — accountUsage","text":"","code":"accountUsage(   account = NULL,   server = NULL,   usageType = \"hours\",   from = NULL,   until = NULL,   interval = NULL )"},{"path":"https://rstudio.github.io/rsconnect/reference/accountUsage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Show Account Usage — accountUsage","text":"account Account name. single account registered system parameter can omitted. server Server name. Required use account name multiple servers. usageType Use metric retreive (example: \"hours\") Date range starting timestamp (Unix timestamp relative time delta \"2d\" \"3w\"). Date range ending timestamp (Unix timestamp relative time delta \"2d\" \"3w\"). interval Summarization interval. Data points intervals less grouped. (Number seconds relative time delta e.g. \"1h\").","code":""},{"path":"https://rstudio.github.io/rsconnect/reference/accountUsage.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Show Account Usage — accountUsage","text":"function works ShinyApps servers.","code":""},{"path":"https://rstudio.github.io/rsconnect/reference/accounts.html","id":null,"dir":"Reference","previous_headings":"","what":"Account Management Functions — accounts","title":"Account Management Functions — accounts","text":"Functions enumerate remove accounts local system. Prior deploying applications need register account local system.","code":""},{"path":"https://rstudio.github.io/rsconnect/reference/accounts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Account Management Functions — accounts","text":"","code":"accounts(server = NULL)  accountInfo(name, server = NULL)  removeAccount(name, server = NULL)"},{"path":"https://rstudio.github.io/rsconnect/reference/accounts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Account Management Functions — accounts","text":"server Name server account registered (optional; see servers()) name Name account","code":""},{"path":"https://rstudio.github.io/rsconnect/reference/accounts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Account Management Functions — accounts","text":"accounts returns data frame names accounts registered system servers reside. accountInfo returns list account details.","code":""},{"path":"https://rstudio.github.io/rsconnect/reference/accounts.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Account Management Functions — accounts","text":"register account using setAccountInfo() function (ShinyApps) connectUser() function (servers). can subsequently remove account using removeAccount function. accounts accountInfo functions provided viewing previously registered accounts.","code":""},{"path":[]},{"path":"https://rstudio.github.io/rsconnect/reference/addAuthorizedUser.html","id":null,"dir":"Reference","previous_headings":"","what":"Add authorized user to application — addAuthorizedUser","title":"Add authorized user to application — addAuthorizedUser","text":"Add authorized user application","code":""},{"path":"https://rstudio.github.io/rsconnect/reference/addAuthorizedUser.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add authorized user to application — addAuthorizedUser","text":"","code":"addAuthorizedUser(   email,   appDir = getwd(),   appName = NULL,   account = NULL,   server = NULL,   sendEmail = NULL,   emailMessage = NULL )"},{"path":"https://rstudio.github.io/rsconnect/reference/addAuthorizedUser.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add authorized user to application — addAuthorizedUser","text":"email Email address user add. appDir Directory containing application. Defaults current working directory. appName Name application. account Account name. single account registered system parameter can omitted. server Server name. Required use account name multiple servers. sendEmail Send email letting user know application shared . emailMessage Optional character vector length 1 containing custom message send email invitation. Defaults NULL, use default invitation message.","code":""},{"path":"https://rstudio.github.io/rsconnect/reference/addAuthorizedUser.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Add authorized user to application — addAuthorizedUser","text":"function works ShinyApps servers.","code":""},{"path":[]},{"path":"https://rstudio.github.io/rsconnect/reference/addLinter.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a Linter — addLinter","title":"Add a Linter — addLinter","text":"Add linter, used subsequent calls lint().","code":""},{"path":"https://rstudio.github.io/rsconnect/reference/addLinter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a Linter — addLinter","text":"","code":"addLinter(name, linter)"},{"path":"https://rstudio.github.io/rsconnect/reference/addLinter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a Linter — addLinter","text":"name name linter, string. linter linter().","code":""},{"path":"https://rstudio.github.io/rsconnect/reference/addLinter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add a Linter — addLinter","text":"","code":"addLinter(\"no.capitals\", linter(    ## Identify lines containing capital letters -- either by name or by index   apply = function(content, ...) {     grep(\"[A-Z]\", content)   },    ## Only use this linter on R files (paths ending with .r or .R)   takes = function(paths) {     grep(\"[rR]$\", paths)   },    # Use the default message constructor   message = function(content, lines, ...) {     makeLinterMessage(\"Capital letters found on the following lines\", content, lines)   },    # Give a suggested prescription   suggest = \"Do not use capital letters in these documents.\" ))"},{"path":"https://rstudio.github.io/rsconnect/reference/appDependencies.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect Application Dependencies — appDependencies","title":"Detect Application Dependencies — appDependencies","text":"Recursively detect package dependencies application. function parses .R files application directory determine packages application depends ; packages packages depend .","code":""},{"path":"https://rstudio.github.io/rsconnect/reference/appDependencies.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect Application Dependencies — appDependencies","text":"","code":"appDependencies(appDir = getwd(), appFiles = NULL)"},{"path":"https://rstudio.github.io/rsconnect/reference/appDependencies.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detect Application Dependencies — appDependencies","text":"appDir Directory containing application. Defaults current working directory. appFiles files directories bundle deploy (upload = TRUE). Can NULL, case files directory containing application bundled, exception listed .rscignore file. Takes precedence appFileManifest supplied.","code":""},{"path":"https://rstudio.github.io/rsconnect/reference/appDependencies.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect Application Dependencies — appDependencies","text":"Returns data frame listing package dependencies detected application:","code":""},{"path":"https://rstudio.github.io/rsconnect/reference/appDependencies.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Detect Application Dependencies — appDependencies","text":"Dependencies determined parsing application source code looking calls library, require, ::, :::. Recursive dependencies detected examining Depends, Imports, LinkingTo fields packages immediately dependend application.","code":""},{"path":"https://rstudio.github.io/rsconnect/reference/appDependencies.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Detect Application Dependencies — appDependencies","text":"Since Suggests field included determining recursive dependencies packages, possible every package required run application detected. case, can force package included dependency inserting call(s) require within source directory. code need actually execute, example create standalone file named dependencies.R following code: require(xts) require(colorspace) force xts colorspace packages installed along rest application deployed.","code":""},{"path":[]},{"path":"https://rstudio.github.io/rsconnect/reference/appDependencies.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Detect Application Dependencies — appDependencies","text":"","code":"if (FALSE) {  # dependencies for the app in the current working dir appDependencies()  # dependencies for an app in another directory appDependencies(\"~/projects/shiny/app1\") }"},{"path":"https://rstudio.github.io/rsconnect/reference/applicationConfigDir.html","id":null,"dir":"Reference","previous_headings":"","what":"Application Configuration Directory — applicationConfigDir","title":"Application Configuration Directory — applicationConfigDir","text":"Returns root path used store per user configuration data. check old locations create path; use rsconnectConfigDir cases.","code":""},{"path":"https://rstudio.github.io/rsconnect/reference/applicationConfigDir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Application Configuration Directory — applicationConfigDir","text":"","code":"applicationConfigDir()"},{"path":"https://rstudio.github.io/rsconnect/reference/applicationConfigDir.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Application Configuration Directory — applicationConfigDir","text":"string containing path configuration folder.","code":""},{"path":"https://rstudio.github.io/rsconnect/reference/applications.html","id":null,"dir":"Reference","previous_headings":"","what":"List Deployed Applications — applications","title":"List Deployed Applications — applications","text":"List applications currently deployed given account.","code":""},{"path":"https://rstudio.github.io/rsconnect/reference/applications.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List Deployed Applications — applications","text":"","code":"applications(account = NULL, server = NULL)"},{"path":"https://rstudio.github.io/rsconnect/reference/applications.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List Deployed Applications — applications","text":"account Account name. single account registered system parameter can omitted. server Server name. Required use account name multiple servers.","code":""},{"path":"https://rstudio.github.io/rsconnect/reference/applications.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List Deployed Applications — applications","text":"Returns data frame following columns:","code":""},{"path":"https://rstudio.github.io/rsconnect/reference/applications.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"List Deployed Applications — applications","text":"register account call setAccountInfo() function.","code":""},{"path":[]},{"path":"https://rstudio.github.io/rsconnect/reference/applications.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List Deployed Applications — applications","text":"","code":"if (FALSE) {  # list all applications for the default account applications()  # list all applications for a specific account applications(\"myaccount\")  # view the list of applications in the data viewer View(applications()) }"},{"path":"https://rstudio.github.io/rsconnect/reference/authorizedUsers.html","id":null,"dir":"Reference","previous_headings":"","what":"(Deprecated) List authorized users for an application — authorizedUsers","title":"(Deprecated) List authorized users for an application — authorizedUsers","text":"(Deprecated) List authorized users application","code":""},{"path":"https://rstudio.github.io/rsconnect/reference/authorizedUsers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Deprecated) List authorized users for an application — authorizedUsers","text":"","code":"authorizedUsers(appDir = getwd())"},{"path":"https://rstudio.github.io/rsconnect/reference/authorizedUsers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(Deprecated) List authorized users for an application — authorizedUsers","text":"appDir Directory containing application. Defaults current working directory.","code":""},{"path":"https://rstudio.github.io/rsconnect/reference/configureApp.html","id":null,"dir":"Reference","previous_headings":"","what":"Configure an Application — configureApp","title":"Configure an Application — configureApp","text":"Configure application running remote server.","code":""},{"path":"https://rstudio.github.io/rsconnect/reference/configureApp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Configure an Application — configureApp","text":"","code":"configureApp(   appName,   appDir = getwd(),   account = NULL,   server = NULL,   redeploy = TRUE,   size = NULL,   instances = NULL,   logLevel = c(\"normal\", \"quiet\", \"verbose\") )"},{"path":"https://rstudio.github.io/rsconnect/reference/configureApp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Configure an Application — configureApp","text":"appName Name application configure appDir Directory containing application. Defaults current working directory. account Account name. single account registered system parameter can omitted. server Server name. Required use account name multiple servers (see servers()) redeploy Re-deploy application configured. size Configure application instance size instances Configure number application instances logLevel One \"quiet\", \"normal\" \"verbose\"; indicates much logging console performed. \"quiet\" reports information; \"verbose\", full diagnostic log captured.","code":""},{"path":"https://rstudio.github.io/rsconnect/reference/configureApp.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Configure an Application — configureApp","text":"function works ShinyApps servers.","code":""},{"path":[]},{"path":"https://rstudio.github.io/rsconnect/reference/configureApp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Configure an Application — configureApp","text":"","code":"if (FALSE) {  # set instance size for an application configureApp(\"myapp\", size=\"xlarge\") }"},{"path":"https://rstudio.github.io/rsconnect/reference/connectApiUser.html","id":null,"dir":"Reference","previous_headings":"","what":"Connect Api User Account — connectApiUser","title":"Connect Api User Account — connectApiUser","text":"Connect user account package using API key authentication can used deploy manage applications behalf account.","code":""},{"path":"https://rstudio.github.io/rsconnect/reference/connectApiUser.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Connect Api User Account — connectApiUser","text":"","code":"connectApiUser(account = NULL, server = NULL, apiKey = NULL, quiet = FALSE)"},{"path":"https://rstudio.github.io/rsconnect/reference/connectApiUser.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Connect Api User Account — connectApiUser","text":"account name account connect. Optional. server server connect . Optional one server registered. apiKey API key used authenticate user quiet Whether show messages prompts connecting account.","code":""},{"path":"https://rstudio.github.io/rsconnect/reference/connectApiUser.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Connect Api User Account — connectApiUser","text":"function configures user connect using apiKey http auth headers instead token. less secure may necessary client behind proxy otherwise unable authenticate using token.","code":""},{"path":[]},{"path":"https://rstudio.github.io/rsconnect/reference/connectUser.html","id":null,"dir":"Reference","previous_headings":"","what":"Connect User Account — connectUser","title":"Connect User Account — connectUser","text":"Connect user account package can used deploy manage applications behalf account.","code":""},{"path":"https://rstudio.github.io/rsconnect/reference/connectUser.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Connect User Account — connectUser","text":"","code":"connectUser(   account = NULL,   server = NULL,   quiet = FALSE,   launch.browser = getOption(\"rsconnect.launch.browser\", interactive()) )"},{"path":"https://rstudio.github.io/rsconnect/reference/connectUser.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Connect User Account — connectUser","text":"account name account connect. Optional. server server connect . Optional one server registered. quiet Whether show messages prompts connecting account. launch.browser true, system's default web browser launched automatically app started. Defaults TRUE interactive sessions . function passed, called app started, app URL paramter.","code":""},{"path":"https://rstudio.github.io/rsconnect/reference/connectUser.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Connect User Account — connectUser","text":"function invoked, web browser opened page target server prompted enter credentials. Upon successful authentication, local installation rsconnect server account paired, able deploy manage applications using package without prompts credentials.","code":""},{"path":[]},{"path":"https://rstudio.github.io/rsconnect/reference/deployAPI.html","id":null,"dir":"Reference","previous_headings":"","what":"Deploy a Plumber API — deployAPI","title":"Deploy a Plumber API — deployAPI","text":"Deploys application consisting plumber API routes. given directory must contain script returning plumb object plumber API definition.","code":""},{"path":"https://rstudio.github.io/rsconnect/reference/deployAPI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deploy a Plumber API — deployAPI","text":"","code":"deployAPI(api, ...)"},{"path":"https://rstudio.github.io/rsconnect/reference/deployAPI.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Deploy a Plumber API — deployAPI","text":"api Path API project directory. Must contain either entrypoint.R plumber.R ... Additional arguments deployApp().","code":""},{"path":"https://rstudio.github.io/rsconnect/reference/deployAPI.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Deploy a Plumber API — deployAPI","text":"Deploy plumber API definition either supplying directory containing plumber.R (API definition) entrypoint.R returns plumb object created plumber::plumb(). See plumber documentation information.","code":""},{"path":[]},{"path":"https://rstudio.github.io/rsconnect/reference/deployApp.html","id":null,"dir":"Reference","previous_headings":"","what":"Deploy an Application — deployApp","title":"Deploy an Application — deployApp","text":"Deploy shiny application, RMarkdown document, plumber API, HTML content server.","code":""},{"path":"https://rstudio.github.io/rsconnect/reference/deployApp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deploy an Application — deployApp","text":"","code":"deployApp(   appDir = getwd(),   appFiles = NULL,   appFileManifest = NULL,   appPrimaryDoc = NULL,   appSourceDoc = NULL,   appName = NULL,   appTitle = NULL,   appId = NULL,   contentCategory = NULL,   account = NULL,   server = NULL,   upload = TRUE,   recordDir = NULL,   launch.browser = getOption(\"rsconnect.launch.browser\", interactive()),   on.failure = NULL,   logLevel = c(\"normal\", \"quiet\", \"verbose\"),   lint = TRUE,   metadata = list(),   forceUpdate = getOption(\"rsconnect.force.update.apps\", FALSE),   python = NULL,   forceGeneratePythonEnvironment = FALSE,   quarto = NULL,   appVisibility = NULL,   image = NULL )"},{"path":"https://rstudio.github.io/rsconnect/reference/deployApp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Deploy an Application — deployApp","text":"appDir Directory containing application. Defaults current working directory. appFiles files directories bundle deploy (upload = TRUE). Can NULL, case files directory containing application bundled, exception listed .rscignore file. Takes precedence appFileManifest supplied. appFileManifest alternate way specify files deployed; file containing names files, one per line, relative appDir. appPrimaryDoc application contains one document, parameter indicates primary one, path relative appDir. Can NULL, case primary document inferred contents deployed. appSourceDoc application composed static files (e.g HTML), parameter indicates source document, , fully qualified path. Deployment information returned deployments() associated source document. appName Name application (names must unique within account). Defaults base name specified appDir. appTitle Free-form descriptive title application. Optional; supplied, often displayed favor name. deploying new application, may supply appTitle receive auto-generated appName. appId updating application, ID application updated. Optional unless updating app owned another user. contentCategory Optional; kind content deployed (e.g. \"plot\" \"site\"). account Account deploy application . parameter required initial deployment application multiple accounts configured system (see accounts). server Server name. Required use account name multiple servers. upload TRUE (default) application uploaded local system prior deployment. FALSE re-deployed using last version uploaded. FALSE supported shinyapps.io; TRUE required Posit Connect. recordDir Directory publish record written. Can NULL case record written location specified appDir. launch.browser true, system's default web browser launched automatically app started. Defaults TRUE interactive sessions . function passed, called app started, app URL paramter. .failure Function called deployment fails. deployment log URL available, passed parameter. logLevel One \"quiet\", \"normal\" \"verbose\"; indicates much logging console performed. \"quiet\" reports information; \"verbose\", full diagnostic log captured. lint Lint project initiating deployment, identify potentially problematic code? metadata Additional metadata fields save deployment record. fields returned subsequent calls deployments(). forceUpdate TRUE, update previously-deployed app without asking. FALSE, ask update. unset, defaults value getOption(\"rsconnect.force.update.apps\", FALSE). python Full path python binary use reticulate. Required reticulate dependency app deployed. python = NULL, RETICULATE_PYTHON RETICULATE_PYTHON_FALLBACK set environment, value used. specified python binary invoked determine version list python packages installed environment. forceGeneratePythonEnvironment Optional. existing requirements.txt file found, overwritten argument TRUE. quarto Optional. Full path Quarto binary use deploying Quarto content. provided Quarto binary used run quarto inspect gather information content. appVisibility One NULL, \"private\", \"public\"; visibility deployment. NULL`, change visibility made. Currently effect deployments shinyapps.io. image Optional. name image use building executing content. none provided, Posit Connect attempt choose image based content requirements.","code":""},{"path":[]},{"path":"https://rstudio.github.io/rsconnect/reference/deployApp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Deploy an Application — deployApp","text":"","code":"if (FALSE) {  # deploy the application in the current working dir deployApp()  # deploy an application in another directory deployApp(\"~/projects/shiny/app1\")  # deploy using an alternative application name and title deployApp(\"~/projects/shiny/app1\", appName = \"myapp\",           appTitle = \"My Application\")  # deploy specifying an explicit account name, then # redeploy with no arguments (will automatically use # the previously specified account) deployApp(account = \"jsmith\") deployApp()  # deploy but don't launch a browser when completed deployApp(launch.browser = FALSE)  # deploy a Quarto website, using the quarto package to # find the Quarto binary deployApp(\"~/projects/quarto/site1\", quarto = quarto::quarto_path()) }"},{"path":"https://rstudio.github.io/rsconnect/reference/deployDoc.html","id":null,"dir":"Reference","previous_headings":"","what":"Deploy a Document — deployDoc","title":"Deploy a Document — deployDoc","text":"Deploys application consisting single R Markdown document single file (HTML PDF document).","code":""},{"path":"https://rstudio.github.io/rsconnect/reference/deployDoc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deploy a Document — deployDoc","text":"","code":"deployDoc(doc, ...)"},{"path":"https://rstudio.github.io/rsconnect/reference/deployDoc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Deploy a Document — deployDoc","text":"doc Path document deploy. ... Additional arguments deployApp(). supply appDir, appFiles, appPrimaryDoc; three parameters automatically generated deployDoc document.","code":""},{"path":"https://rstudio.github.io/rsconnect/reference/deployDoc.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Deploy a Document — deployDoc","text":"deploying R Markdown document, files required render display file must deployed. method discovers additional files using rmarkdown::find_external_resources() rmarkdown. find document missing dependencies, either specify dependencies explicitly document (documentation rmarkdown::find_external_resources() explains ), call deployApp() directly specify file list appFiles parameter.","code":""},{"path":[]},{"path":"https://rstudio.github.io/rsconnect/reference/deploySite.html","id":null,"dir":"Reference","previous_headings":"","what":"Deploy a Website — deploySite","title":"Deploy a Website — deploySite","text":"Deploy R Markdown website server.","code":""},{"path":"https://rstudio.github.io/rsconnect/reference/deploySite.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deploy a Website — deploySite","text":"","code":"deploySite(   siteDir = getwd(),   siteName = NULL,   account = NULL,   server = NULL,   render = c(\"none\", \"local\", \"server\"),   launch.browser = getOption(\"rsconnect.launch.browser\", interactive()),   logLevel = c(\"normal\", \"quiet\", \"verbose\"),   lint = FALSE,   metadata = list(),   python = NULL,   ... )"},{"path":"https://rstudio.github.io/rsconnect/reference/deploySite.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Deploy a Website — deploySite","text":"siteDir Directory containing website. Defaults current working directory. siteName Name site (names must unique within account). Defaults base name specified siteDir, (name provided custom site generation function). account Account deploy application . parameter required initial deployment application multiple accounts configured system (see accounts). server Server name. Required use account name multiple servers. render Rendering behavior site: \"none\" upload static version current contents site directory; \"local\" render site locally upload ; \"server\" render site server. Note \"none\" \"local\" R scripts (.R) markdown documents (.Rmd .md) uploaded server. launch.browser true, system's default web browser launched automatically app started. Defaults TRUE interactive sessions . function passed, called app started, app URL paramter. logLevel One \"quiet\", \"normal\" \"verbose\"; indicates much logging console performed. \"quiet\" reports information; \"verbose\", full diagnostic log captured. lint Lint project initiating deployment, identify potentially problematic code? metadata Additional metadata fields save deployment record. fields returned subsequent calls deployments(). python Full path python binary use reticulate. Required reticulate dependency app deployed. python = NULL, RETICULATE_PYTHON RETICULATE_PYTHON_FALLBACK set environment, value used. specified python binary invoked determine version list python packages installed environment. ... Additional arguments deployApp(). supply appDir, appFiles, appSourceDoc; three parameters automatically generated deploySite.","code":""},{"path":[]},{"path":"https://rstudio.github.io/rsconnect/reference/deployTFModel.html","id":null,"dir":"Reference","previous_headings":"","what":"Deploy a TensorFlow saved model — deployTFModel","title":"Deploy a TensorFlow saved model — deployTFModel","text":"Deploys directory containing Tensorflow saved model file.","code":""},{"path":"https://rstudio.github.io/rsconnect/reference/deployTFModel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deploy a TensorFlow saved model — deployTFModel","text":"","code":"deployTFModel(modelDir, ...)"},{"path":"https://rstudio.github.io/rsconnect/reference/deployTFModel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Deploy a TensorFlow saved model — deployTFModel","text":"modelDir Path saved model directory. MUST contain saved_model.pb saved_model.pbtxt ... Additional arguments deployApp().","code":""},{"path":"https://rstudio.github.io/rsconnect/reference/deployTFModel.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Deploy a TensorFlow saved model — deployTFModel","text":"Deploy single Tensorflow saved model bundle. passed directory contains saved_model.pb saved_model.pbtxt file, well variables assets necessary load model. saved model directory might look like :   information creating saved models, see Keras method keras::export_savedmodel.keras.engine.training.Model() TensorFlow method tensorflow::export_savedmodel(). using TensorFlow package R, official TensorFlow guide saving restoring models may useful.","code":"./1/ ./1/saved_model.pb or ./1/saved_model.pbtxt ./1/variables/ ./1/variables/variables.data-00000-of-00001 ./1/variables/variables.index"},{"path":"https://rstudio.github.io/rsconnect/reference/deployTFModel.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Deploy a TensorFlow saved model — deployTFModel","text":"https://www.tensorflow.org/guide/saved_model","code":""},{"path":[]},{"path":"https://rstudio.github.io/rsconnect/reference/deployments.html","id":null,"dir":"Reference","previous_headings":"","what":"List Application Deployments — deployments","title":"List Application Deployments — deployments","text":"List deployment records given application.","code":""},{"path":"https://rstudio.github.io/rsconnect/reference/deployments.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List Application Deployments — deployments","text":"","code":"deployments(   appPath,   nameFilter = NULL,   accountFilter = NULL,   serverFilter = NULL,   excludeOrphaned = TRUE )"},{"path":"https://rstudio.github.io/rsconnect/reference/deployments.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List Application Deployments — deployments","text":"appPath path content deployed, either directory individual document. nameFilter Return deployments matching given name (optional) accountFilter Return deployments matching given account (optional) serverFilter Return deployments matching given server (optional) excludeOrphaned TRUE (default), return deployments made currently registered account. Deployments made accounts longer registered (via e.g.removeAccount()) returned.","code":""},{"path":"https://rstudio.github.io/rsconnect/reference/deployments.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List Application Deployments — deployments","text":"Returns data frame least following columns: additional metadata saved deployment record using metadata argument deployApp(), frame include additional columns.","code":""},{"path":[]},{"path":"https://rstudio.github.io/rsconnect/reference/deployments.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List Application Deployments — deployments","text":"","code":"if (FALSE) {  # Return all deployments of the ~/r/myapp directory made with the 'abc' # account deployments(\"~/r/myapp\", accountFilter=\"abc\") }"},{"path":"https://rstudio.github.io/rsconnect/reference/forgetDeployment.html","id":null,"dir":"Reference","previous_headings":"","what":"Forget Application Deployment — forgetDeployment","title":"Forget Application Deployment — forgetDeployment","text":"Forgets application deployment. useful application deleted server, local deployment information needs reset.","code":""},{"path":"https://rstudio.github.io/rsconnect/reference/forgetDeployment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Forget Application Deployment — forgetDeployment","text":"","code":"forgetDeployment(   appPath = getwd(),   name = NULL,   account = NULL,   server = NULL,   dryRun = FALSE,   force = !interactive() )"},{"path":"https://rstudio.github.io/rsconnect/reference/forgetDeployment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Forget Application Deployment — forgetDeployment","text":"appPath path content deployed, either directory individual document. name name content deployed (optional) account name account content deployed (optional) server name server content deployed (optional) dryRun Set TRUE preview files/directories removed instead actually removing . Defaults FALSE. force Set TRUE remove files directories without prompting. Defaults FALSE interactive sessions.","code":""},{"path":"https://rstudio.github.io/rsconnect/reference/forgetDeployment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Forget Application Deployment — forgetDeployment","text":"NULL, invisibly.","code":""},{"path":"https://rstudio.github.io/rsconnect/reference/forgetDeployment.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Forget Application Deployment — forgetDeployment","text":"method removes disk file containing deployment metadata. \"name\", \"account\", \"server\" NULL, deployments application forgotten; otherwise, specified deployment forgotten.","code":""},{"path":"https://rstudio.github.io/rsconnect/reference/generateAppName.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Application Name — generateAppName","title":"Generate Application Name — generateAppName","text":"Generate short name (identifier) application given application title.","code":""},{"path":"https://rstudio.github.io/rsconnect/reference/generateAppName.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Application Name — generateAppName","text":"","code":"generateAppName(appTitle, appPath = NULL, account = NULL, unique = TRUE)"},{"path":"https://rstudio.github.io/rsconnect/reference/generateAppName.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Application Name — generateAppName","text":"appTitle descriptive title application. appPath path application's content, either directory individual document. Optional. account account application deployed. Optional. unique Whether try generate unique name.","code":""},{"path":"https://rstudio.github.io/rsconnect/reference/generateAppName.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Application Name — generateAppName","text":"Returns valid short name application.","code":""},{"path":"https://rstudio.github.io/rsconnect/reference/generateAppName.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate Application Name — generateAppName","text":"function modifies title forms suitable application name. Suitable application names 3 - 64 characters long contain alphanumeric characters. function intended used find name new application. appPath account specified, returned name also unique among locally known deployments directory (note guaranteed unique server). behavior can disabled setting unique = FALSE.","code":""},{"path":"https://rstudio.github.io/rsconnect/reference/generateAppName.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Application Name — generateAppName","text":"","code":"if (FALSE) { # Generate a short name for a sample application generateAppName(\"My Father's Country\", \"~/fathers-country\", \"myacct\") }"},{"path":"https://rstudio.github.io/rsconnect/reference/lint.html","id":null,"dir":"Reference","previous_headings":"","what":"Lint a Project — lint","title":"Lint a Project — lint","text":"Takes set active linters (see addLinter()), applies files within project.","code":""},{"path":"https://rstudio.github.io/rsconnect/reference/lint.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Lint a Project — lint","text":"","code":"lint(project, files = NULL, appPrimaryDoc = NULL)"},{"path":"https://rstudio.github.io/rsconnect/reference/lint.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Lint a Project — lint","text":"project Path project directory. files Specific files lint. Can NULL, case files directory linted. appPrimaryDoc primary file project directory. Can NULL, case inferred (possible) directory contents.","code":""},{"path":"https://rstudio.github.io/rsconnect/reference/linter.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Linter — linter","title":"Create a Linter — linter","text":"Generate linter, can identify errors problematic regions project.","code":""},{"path":"https://rstudio.github.io/rsconnect/reference/linter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Linter — linter","text":"","code":"linter(apply, takes, message, suggestion)"},{"path":"https://rstudio.github.io/rsconnect/reference/linter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Linter — linter","text":"apply Function , given content file, returns indices problems found. takes Function , given set paths, returns subset paths linter uses. message Function , given content lines, returns informative message user. Typically generated makeLinterMessage(). suggestion String giving prescribed fix linted problem.","code":""},{"path":"https://rstudio.github.io/rsconnect/reference/linter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Linter — linter","text":"","code":"addLinter(\"no.capitals\", linter(    ## Identify lines containing capital letters -- either by name or by index   apply = function(content, ...) {     grep(\"[A-Z]\", content)   },    ## Only use this linter on R files (paths ending with .r or .R)   takes = function(paths) {     grep(\"[rR]$\", paths)   },    # Use the default message constructor   message = function(content, lines, ...) {     makeLinterMessage(\"Capital letters found on the following lines\", content, lines)   },    # Give a suggested prescription   suggest = \"Do not use capital letters in these documents.\" ))"},{"path":"https://rstudio.github.io/rsconnect/reference/listBundleFiles.html","id":null,"dir":"Reference","previous_headings":"","what":"List Files to be Bundled — listBundleFiles","title":"List Files to be Bundled — listBundleFiles","text":"Given directory containing application, returns names files bundled application.","code":""},{"path":"https://rstudio.github.io/rsconnect/reference/listBundleFiles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List Files to be Bundled — listBundleFiles","text":"","code":"listBundleFiles(appDir)"},{"path":"https://rstudio.github.io/rsconnect/reference/listBundleFiles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List Files to be Bundled — listBundleFiles","text":"appDir Directory containing application.","code":""},{"path":"https://rstudio.github.io/rsconnect/reference/listBundleFiles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List Files to be Bundled — listBundleFiles","text":"Returns list containing following elements:","code":""},{"path":"https://rstudio.github.io/rsconnect/reference/listBundleFiles.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"List Files to be Bundled — listBundleFiles","text":"function computes results similar recursive directory listing list.files(), following constraints: total size files exceeds maximum bundle size, files listed. maximum bundle size controlled rsconnect.max.bundle.size option. total size number files exceeds maximum number bundled, files listed. maximum number files bundle controlled rsconnect.max.bundle.files option. Certain files folders need bundled, containing internal version control RStudio state, excluded. order stop specific files working directory listed bundle, files must listed .rscignore file. file must one file directory per line support wildcards.","code":""},{"path":"https://rstudio.github.io/rsconnect/reference/makeLinterMessage.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct a Linter Message — makeLinterMessage","title":"Construct a Linter Message — makeLinterMessage","text":"Pretty-prints linter message. Primarily used helper constructing linter messages linter().","code":""},{"path":"https://rstudio.github.io/rsconnect/reference/makeLinterMessage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct a Linter Message — makeLinterMessage","text":"","code":"makeLinterMessage(header, content, lines)"},{"path":"https://rstudio.github.io/rsconnect/reference/makeLinterMessage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct a Linter Message — makeLinterMessage","text":"header header message describing linter. content content file linted. lines line numbers content contain lint.","code":""},{"path":"https://rstudio.github.io/rsconnect/reference/oldApplicationConfigDir.html","id":null,"dir":"Reference","previous_headings":"","what":"Old Application Config Directory — oldApplicationConfigDir","title":"Old Application Config Directory — oldApplicationConfigDir","text":"Returns old application configuration directory used rsconnect 0.8.24 prior. versions wrote configuration data XDG compliant locations, CRAN policy since restricted disk locations permitted. See:","code":""},{"path":"https://rstudio.github.io/rsconnect/reference/oldApplicationConfigDir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Old Application Config Directory — oldApplicationConfigDir","text":"","code":"oldApplicationConfigDir(appName)"},{"path":"https://rstudio.github.io/rsconnect/reference/oldApplicationConfigDir.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Old Application Config Directory — oldApplicationConfigDir","text":"appName application's name (connect rsconnect)","code":""},{"path":"https://rstudio.github.io/rsconnect/reference/oldApplicationConfigDir.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Old Application Config Directory — oldApplicationConfigDir","text":"old application configuration directory.","code":""},{"path":"https://rstudio.github.io/rsconnect/reference/oldApplicationConfigDir.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Old Application Config Directory — oldApplicationConfigDir","text":"https://cran.r-project.org/web/packages/policies.html","code":""},{"path":"https://rstudio.github.io/rsconnect/reference/options.html","id":null,"dir":"Reference","previous_headings":"","what":"Package Options — rsconnectOptions","title":"Package Options — rsconnectOptions","text":"rsconnect package supports several options control method used http communications, printing diagnostic information http requests, launching external browser deployment.","code":""},{"path":"https://rstudio.github.io/rsconnect/reference/options.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Package Options — rsconnectOptions","text":"Supported global options include: rsconnect.ca.bundle Path custom bundle Certificate Authority root certificates use connecting servers via SSL. option can also specied environment variable RSCONNECT_CA_BUNDLE. Leave undefined use system's default certificate store. rsconnect.check.certificate Whether check SSL certificate connecting remote host; defaults TRUE. Setting FALSE insecure, allow connect hosts using invalid certificates last resort. rsconnect.http Http implementation used connections back-end service: option specified libcurl used default. rsconnect.http.trace TRUE, trace http calls (prints method, path, total milliseconds http request) rsconnect.http.trace.json TRUE, trace JSON content (shows JSON payloads sent received server)) rsconnect.http.verbose TRUE, print verbose output http connections (useful debugging SSL certificate http connection problems) rsconnect.tar default, rsconnect uses R's internal tar implementation compress content bundles. may cause invalid bundles environments. cases, use option specify path alternate tar executable. option can also specified environment variable RSCONNECT_TAR. Leave undefined use default tar implementation. rsconnect.rcurl.options named list additional cURL options use using RCurl HTTP implementation R. Run RCurl::curlOptions() see available options. rsconnect.libcurl.options named list additional cURL options use using curl HTTP implementation R. Run curl::curl_options() see available options. rsconnect.error.trace TRUE, print detailed stack traces errors occurring deployment. rsconnect.launch.browser TRUE, automatically launch browser view applications deployed rsconnect.locale.cache FALSE, disable detected locale cache (Windows ). rsconnect.locale Override detected locale. rsconnect.max.bundle.size maximum size, bytes, deployed content. set, defaults 3 GB. rsconnect.max.bundle.files maximum number files deploy. set, defaults 10,000. rsconnect.force.update.apps TRUE, bypasses prompt confirm whether wish update previously-deployed content rsconnect.pre.deploy function run prior deploying content; receives argument path content deployed. rsconnect.post.deploy function run successfully deploying content; receives argument path content just deployed. rsconnect.python.enabled TRUE, use python executable specified RETICULATE_PYTHON environment variable add python section deployment manifest. default, python enabled deploying Posit Connect disabled deploying shinyapps.io. deploying content RStudio IDE, rsconnect package's deployment methods executed vanilla R session execute startup scripts. can make challenging ensure options set properly prior push-button deployment, rsconnect package parallel set ``startup'' scripts runs prior deploying. follow run order, exist, prior deployment: $R_HOME/etc/rsconnect.site Like Rprofile.site; site-wide pre-flight options. ~/.rsconnect_profile Like .Rprofile; user-specific content. $PROJECT/.rsconnect_profile Like .Rprofile projects; $PROJECT refers root directory content deployed. Note , unlike .Rprofile, files replace ; three run exist.","code":""},{"path":"https://rstudio.github.io/rsconnect/reference/options.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Package Options — rsconnectOptions","text":"","code":"if (FALSE) {  # use curl for http connections options(rsconnect.http = \"curl\")  # trace http requests options(rsconnect.http.trace = TRUE)  # print verbose output for http requests options(rsconnect.http.verbose = TRUE)  # print JSON content options(rsconnect.http.trace.json = TRUE)  # don't automatically launch a browser after deployment options(rsconnect.launch.browser = FALSE) }"},{"path":"https://rstudio.github.io/rsconnect/reference/purgeApp.html","id":null,"dir":"Reference","previous_headings":"","what":"Purge an Application — purgeApp","title":"Purge an Application — purgeApp","text":"Purge currently archived ShinyApps application.","code":""},{"path":"https://rstudio.github.io/rsconnect/reference/purgeApp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Purge an Application — purgeApp","text":"","code":"purgeApp(appName, account = NULL, server = NULL, quiet = FALSE)"},{"path":"https://rstudio.github.io/rsconnect/reference/purgeApp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Purge an Application — purgeApp","text":"appName Name application purge account Account name. single account registered system parameter can omitted. server Server name. Required use account name multiple servers (see servers()) quiet Request status information printed console termination.","code":""},{"path":"https://rstudio.github.io/rsconnect/reference/purgeApp.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Purge an Application — purgeApp","text":"function works ShinyApps servers.","code":""},{"path":[]},{"path":"https://rstudio.github.io/rsconnect/reference/purgeApp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Purge an Application — purgeApp","text":"","code":"if (FALSE) {  # purge an application purgeApp(\"myapp\") }"},{"path":"https://rstudio.github.io/rsconnect/reference/removeAuthorizedUser.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove authorized user from an application — removeAuthorizedUser","title":"Remove authorized user from an application — removeAuthorizedUser","text":"Remove authorized user application","code":""},{"path":"https://rstudio.github.io/rsconnect/reference/removeAuthorizedUser.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove authorized user from an application — removeAuthorizedUser","text":"","code":"removeAuthorizedUser(   user,   appDir = getwd(),   appName = NULL,   account = NULL,   server = NULL )"},{"path":"https://rstudio.github.io/rsconnect/reference/removeAuthorizedUser.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove authorized user from an application — removeAuthorizedUser","text":"user user remove. Can id email address. appDir Directory containing application. Defaults current working directory. appName Name application. account Account name. single account registered system parameter can omitted. server Server name. Required use account name multiple servers.","code":""},{"path":"https://rstudio.github.io/rsconnect/reference/removeAuthorizedUser.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Remove authorized user from an application — removeAuthorizedUser","text":"function works ShinyApps servers.","code":""},{"path":[]},{"path":"https://rstudio.github.io/rsconnect/reference/resendInvitation.html","id":null,"dir":"Reference","previous_headings":"","what":"Resend invitation for invited users of an application — resendInvitation","title":"Resend invitation for invited users of an application — resendInvitation","text":"Resend invitation invited users application","code":""},{"path":"https://rstudio.github.io/rsconnect/reference/resendInvitation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Resend invitation for invited users of an application — resendInvitation","text":"","code":"resendInvitation(   invite,   regenerate = FALSE,   appDir = getwd(),   appName = NULL,   account = NULL,   server = NULL )"},{"path":"https://rstudio.github.io/rsconnect/reference/resendInvitation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Resend invitation for invited users of an application — resendInvitation","text":"invite invitation resend. Can id email address. regenerate Regenerate invite code. Can helpful invitation expired. appDir Directory containing application. Defaults current working directory. appName Name application. account Account name. single account registered system parameter can omitted. server Server name. Required use account name multiple servers.","code":""},{"path":"https://rstudio.github.io/rsconnect/reference/resendInvitation.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Resend invitation for invited users of an application — resendInvitation","text":"function works ShinyApps servers.","code":""},{"path":[]},{"path":"https://rstudio.github.io/rsconnect/reference/restartApp.html","id":null,"dir":"Reference","previous_headings":"","what":"Restart an Application — restartApp","title":"Restart an Application — restartApp","text":"Restart application currently running remote server.","code":""},{"path":"https://rstudio.github.io/rsconnect/reference/restartApp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Restart an Application — restartApp","text":"","code":"restartApp(appName, account = NULL, server = NULL, quiet = FALSE)"},{"path":"https://rstudio.github.io/rsconnect/reference/restartApp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Restart an Application — restartApp","text":"appName Name application restart account Account name. single account registered system parameter can omitted. server Server name. Required use account name multiple servers (see servers()) quiet Request status information printed console operation.","code":""},{"path":"https://rstudio.github.io/rsconnect/reference/restartApp.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Restart an Application — restartApp","text":"function works ShinyApps servers.","code":""},{"path":[]},{"path":"https://rstudio.github.io/rsconnect/reference/restartApp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Restart an Application — restartApp","text":"","code":"if (FALSE) {  # restart an application restartApp(\"myapp\") }"},{"path":"https://rstudio.github.io/rsconnect/reference/rpubsUpload.html","id":null,"dir":"Reference","previous_headings":"","what":"Upload a file to RPubs — rpubsUpload","title":"Upload a file to RPubs — rpubsUpload","text":"function publishes file rpubs.com. upload succeeds list includes id continueUrl returned. browser opened continueUrl complete publishing document. error occurs diagnostic message returned error element list.","code":""},{"path":"https://rstudio.github.io/rsconnect/reference/rpubsUpload.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Upload a file to RPubs — rpubsUpload","text":"","code":"rpubsUpload(title, contentFile, originalDoc, id = NULL, properties = list())"},{"path":"https://rstudio.github.io/rsconnect/reference/rpubsUpload.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Upload a file to RPubs — rpubsUpload","text":"title title document. contentFile path content file upload. originalDoc document rendered produce contentFile. May NULL document known. id upload update existing document id parameter specify document id update. Note id provided element list returned successful calls rpubsUpload. properties named list containing additional document properties (RPubs currently expect additional properties, parameter reserved future use).","code":""},{"path":"https://rstudio.github.io/rsconnect/reference/rpubsUpload.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Upload a file to RPubs — rpubsUpload","text":"named list. upload successful list contains id element can used subsequently update document well continueUrl element provides URL browser opened order complete publishing document. upload fails list contains error element contains explanation error occurred.","code":""},{"path":"https://rstudio.github.io/rsconnect/reference/rpubsUpload.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Upload a file to RPubs — rpubsUpload","text":"","code":"if (FALSE) { # upload a document result <- rpubsUpload(\"My document title\", \"Document.html\") if (!is.null(result$continueUrl))    browseURL(result$continueUrl) else    stop(result$error)  # update the same document with a new title updateResult <- rpubsUpload(\"My updated title\", \"Document.html\",                             id = result$id) }"},{"path":"https://rstudio.github.io/rsconnect/reference/rsconnect-package.html","id":null,"dir":"Reference","previous_headings":"","what":"Deployment Interface for R Markdown Documents and Shiny Applications — rsconnect-package","title":"Deployment Interface for R Markdown Documents and Shiny Applications — rsconnect-package","text":"`rsconnect`` package provides programmatic deployment interface RPubs, shinyapps.io, Posit Connect. Supported contents types include R Markdown documents, Shiny applications, plots, static web content.","code":""},{"path":"https://rstudio.github.io/rsconnect/reference/rsconnect-package.html","id":"managing-applications","dir":"Reference","previous_headings":"","what":"Managing Applications","title":"Deployment Interface for R Markdown Documents and Shiny Applications — rsconnect-package","text":"Deploy manage applications following functions: deployApp(): Deploy Shiny application server. configureApp(): Configure application currently running server. restartApp(): Restart application currently running server. terminateApp(): Terminate application currently running server. deployments(): List deployment records given application directory. information application management available applications() help page.","code":""},{"path":"https://rstudio.github.io/rsconnect/reference/rsconnect-package.html","id":"managing-accounts-and-users","dir":"Reference","previous_headings":"","what":"Managing Accounts and Users","title":"Deployment Interface for R Markdown Documents and Shiny Applications — rsconnect-package","text":"Manage accounts local system. setAccountInfo(): Register account. removeAccount(): Remove account. accountInfo(): View information given account. information account management available accounts() help page.","code":""},{"path":"https://rstudio.github.io/rsconnect/reference/rsconnectConfigDir.html","id":null,"dir":"Reference","previous_headings":"","what":"rsconnect Configuration Directory — rsconnectConfigDir","title":"rsconnect Configuration Directory — rsconnectConfigDir","text":"Forms path location disk user-level configuration data package stored.","code":""},{"path":"https://rstudio.github.io/rsconnect/reference/rsconnectConfigDir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"rsconnect Configuration Directory — rsconnectConfigDir","text":"","code":"rsconnectConfigDir(subDir = NULL)"},{"path":"https://rstudio.github.io/rsconnect/reference/rsconnectConfigDir.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"rsconnect Configuration Directory — rsconnectConfigDir","text":"subDir optional subdirectory included last element path.","code":""},{"path":"https://rstudio.github.io/rsconnect/reference/rsconnectConfigDir.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"rsconnect Configuration Directory — rsconnectConfigDir","text":"path configuration directory.","code":""},{"path":"https://rstudio.github.io/rsconnect/reference/rsconnectPackages.html","id":null,"dir":"Reference","previous_headings":"","what":"Using Packages with rsconnect — rsconnectPackages","title":"Using Packages with rsconnect — rsconnectPackages","text":"Deployed applications can depend package available CRAN well package hosted public GitHub repository. application deployed source code scanned dependencies using appDependencies() function. list dependencies sent server along application source code dependencies installed alongside application. Note Suggests dependencies packages automatically included list dependent packages. See Note section documentation appDependencies() function details force packages included dependency list.","code":""},{"path":"https://rstudio.github.io/rsconnect/reference/rsconnectPackages.html","id":"cran-packages","dir":"Reference","previous_headings":"","what":"CRAN Packages","title":"Using Packages with rsconnect — rsconnectPackages","text":"sastisfying CRAN package dependencies, server build exact versions packages installed system application deployed. locally installed package obtained CRAN (e.g. installed R-Forge) result version matches version previously published CRAN error occur. therefore important run packages installed directly CRAN local configuration.","code":""},{"path":"https://rstudio.github.io/rsconnect/reference/rsconnectPackages.html","id":"github-packages","dir":"Reference","previous_headings":"","what":"GitHub Packages","title":"Using Packages with rsconnect — rsconnectPackages","text":"also possible depend packages hosted public GitHub repositories, long installed via devtools::install_github() function devtools package. works install_github records exact Github commit installed locally, making possible download install source code deployment server. Note order work correctly need install latest version devtools Github. can follows:","code":"library(devtools)   install_github(\"r-lib/devtools\")"},{"path":[]},{"path":"https://rstudio.github.io/rsconnect/reference/servers.html","id":null,"dir":"Reference","previous_headings":"","what":"Server Management Functions — servers","title":"Server Management Functions — servers","text":"Functions manage list known servers rsconnect can deploy manage applications.","code":""},{"path":"https://rstudio.github.io/rsconnect/reference/servers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Server Management Functions — servers","text":"","code":"servers(local = FALSE)  discoverServers(quiet = FALSE)  addConnectServer(url, name = NULL, certificate = NULL, quiet = FALSE)  addServer(url, name = NULL, certificate = NULL, quiet = FALSE)  removeServer(name)  serverInfo(name)  addServerCertificate(name, certificate, quiet = FALSE)"},{"path":"https://rstudio.github.io/rsconnect/reference/servers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Server Management Functions — servers","text":"local Return local servers (.e. shinyapps.io) quiet Suppress output prompts possible. url Server's URL. look like http://servername/ http://servername:port/. name Optional nickname server. none given, nickname inferred server's hostname. certificate Optional; path certificate file used making SSL connections server. file's contents copied stored rsconnect package. Can also character vector containing certificate's contents.","code":""},{"path":"https://rstudio.github.io/rsconnect/reference/servers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Server Management Functions — servers","text":"servers returns data frame registered server names URLs. serverInfo returns list details particular server.","code":""},{"path":"https://rstudio.github.io/rsconnect/reference/servers.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Server Management Functions — servers","text":"Register server addServer discoverServers (latter useful administrator configured server autodiscovery). server registered, can connect account server using connectUser(). servers serverInfo functions provided viewing previously registered servers. Servers shinyapps.io posit.cloud always registered.","code":""},{"path":"https://rstudio.github.io/rsconnect/reference/servers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Server Management Functions — servers","text":"","code":"if (FALSE) {  # register a local server addServer(\"http://myrsconnect/\", \"myserver\")  # list servers servers(local = TRUE)  # connect to an account on the server connectUser(server = \"myserver\") }"},{"path":"https://rstudio.github.io/rsconnect/reference/setAccountInfo.html","id":null,"dir":"Reference","previous_headings":"","what":"Set ShinyApps or Posit Cloud Account Info — setAccountInfo","title":"Set ShinyApps or Posit Cloud Account Info — setAccountInfo","text":"Configure ShinyApps Posit Cloud account publishing system.","code":""},{"path":"https://rstudio.github.io/rsconnect/reference/setAccountInfo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set ShinyApps or Posit Cloud Account Info — setAccountInfo","text":"","code":"setAccountInfo(name, token, secret, server = \"shinyapps.io\")"},{"path":"https://rstudio.github.io/rsconnect/reference/setAccountInfo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set ShinyApps or Posit Cloud Account Info — setAccountInfo","text":"name Name account save remove token User token account secret User secret account server Server associate account .","code":""},{"path":[]},{"path":"https://rstudio.github.io/rsconnect/reference/setAccountInfo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set ShinyApps or Posit Cloud Account Info — setAccountInfo","text":"","code":"if (FALSE) {  # register an account setAccountInfo(\"user\", \"token\", \"secret\")  # remove the same account removeAccount(\"user\") }"},{"path":"https://rstudio.github.io/rsconnect/reference/setProperty.html","id":null,"dir":"Reference","previous_headings":"","what":"Set Application property — setProperty","title":"Set Application property — setProperty","text":"Set property currently deployed ShinyApps application.","code":""},{"path":"https://rstudio.github.io/rsconnect/reference/setProperty.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set Application property — setProperty","text":"","code":"setProperty(   propertyName,   propertyValue,   appPath = getwd(),   appName = NULL,   account = NULL,   force = FALSE )"},{"path":"https://rstudio.github.io/rsconnect/reference/setProperty.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set Application property — setProperty","text":"propertyName Name property set propertyValue Nalue set property appPath Directory file deployed. Defaults current working directory. appName Name application account Account name. single account registered system parameter can omitted. force Forcibly set property","code":""},{"path":"https://rstudio.github.io/rsconnect/reference/setProperty.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Set Application property — setProperty","text":"function works ShinyApps servers.","code":""},{"path":"https://rstudio.github.io/rsconnect/reference/setProperty.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set Application property — setProperty","text":"","code":"if (FALSE) {  # set instance size for an application setProperty(\"application.instances.count\", 1)  # disable application package cache setProperty(\"application.package.cache\", FALSE)  }"},{"path":"https://rstudio.github.io/rsconnect/reference/showInvited.html","id":null,"dir":"Reference","previous_headings":"","what":"List invited users for an application — showInvited","title":"List invited users for an application — showInvited","text":"List invited users application","code":""},{"path":"https://rstudio.github.io/rsconnect/reference/showInvited.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List invited users for an application — showInvited","text":"","code":"showInvited(appDir = getwd(), appName = NULL, account = NULL, server = NULL)"},{"path":"https://rstudio.github.io/rsconnect/reference/showInvited.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List invited users for an application — showInvited","text":"appDir Directory containing application. Defaults current working directory. appName Name application. account Account name. single account registered system parameter can omitted. server Server name. Required use account name multiple servers.","code":""},{"path":"https://rstudio.github.io/rsconnect/reference/showInvited.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"List invited users for an application — showInvited","text":"function works ShinyApps servers.","code":""},{"path":[]},{"path":"https://rstudio.github.io/rsconnect/reference/showLogs.html","id":null,"dir":"Reference","previous_headings":"","what":"Show Application Logs — showLogs","title":"Show Application Logs — showLogs","text":"Show logs deployed ShinyApps application.","code":""},{"path":"https://rstudio.github.io/rsconnect/reference/showLogs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show Application Logs — showLogs","text":"","code":"showLogs(   appPath = getwd(),   appFile = NULL,   appName = NULL,   account = NULL,   server = NULL,   entries = 50,   streaming = FALSE )"},{"path":"https://rstudio.github.io/rsconnect/reference/showLogs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Show Application Logs — showLogs","text":"appPath path directory file deployed. appFile path R source file contains application (single file applications). appName name application show logs . May omitted one application deployment made appPath. account account application deployed. May omitted one account registered system. server Server name. Required use account name multiple servers. entries number log entries show. Defaults 50 entries. streaming Whether stream logs. TRUE, function return; instead, log entries written console made, R interrupted. Defaults FALSE.","code":""},{"path":"https://rstudio.github.io/rsconnect/reference/showLogs.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Show Application Logs — showLogs","text":"function uses libcurl transport, works ShinyApps servers.","code":""},{"path":"https://rstudio.github.io/rsconnect/reference/showMetrics.html","id":null,"dir":"Reference","previous_headings":"","what":"Show Application Metrics — showMetrics","title":"Show Application Metrics — showMetrics","text":"Show application metrics currently deployed application","code":""},{"path":"https://rstudio.github.io/rsconnect/reference/showMetrics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show Application Metrics — showMetrics","text":"","code":"showMetrics(   metricSeries,   metricNames,   appDir = getwd(),   appName = NULL,   account = NULL,   server = NULL,   from = NULL,   until = NULL,   interval = NULL )"},{"path":"https://rstudio.github.io/rsconnect/reference/showMetrics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Show Application Metrics — showMetrics","text":"metricSeries Metric series query. Refer shinyapps.io documentation available series. metricNames Metric names series query. Refer shinyapps.io documentation available metrics. appDir Directory containing application. Defaults current working directory. appName Name application account Account name. single account registered system parameter can omitted. server Server name. Required use account name multiple servers. Date range starting timestamp (Unix timestamp relative time delta \"2d\" \"3w\"). Date range ending timestamp (Unix timestamp relative time delta \"2d\" \"3w\"). interval Summarization interval. Data points intervals less grouped. (Relative time delta e.g. \"120s\" \"1h\" \"30d\").","code":""},{"path":"https://rstudio.github.io/rsconnect/reference/showMetrics.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Show Application Metrics — showMetrics","text":"function works ShinyApps servers.","code":""},{"path":"https://rstudio.github.io/rsconnect/reference/showProperties.html","id":null,"dir":"Reference","previous_headings":"","what":"Show Application property — showProperties","title":"Show Application property — showProperties","text":"Show propreties application deployed ShinyApps.","code":""},{"path":"https://rstudio.github.io/rsconnect/reference/showProperties.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show Application property — showProperties","text":"","code":"showProperties(appPath = getwd(), appName = NULL, account = NULL)"},{"path":"https://rstudio.github.io/rsconnect/reference/showProperties.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Show Application property — showProperties","text":"appPath Directory file deployed. Defaults current working directory. appName Name application account Account name. single account registered system parameter can omitted.","code":""},{"path":"https://rstudio.github.io/rsconnect/reference/showProperties.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Show Application property — showProperties","text":"function works ShinyApps servers.","code":""},{"path":"https://rstudio.github.io/rsconnect/reference/showUsage.html","id":null,"dir":"Reference","previous_headings":"","what":"Show Application Usage — showUsage","title":"Show Application Usage — showUsage","text":"Show application usage currently deployed application","code":""},{"path":"https://rstudio.github.io/rsconnect/reference/showUsage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show Application Usage — showUsage","text":"","code":"showUsage(   appDir = getwd(),   appName = NULL,   account = NULL,   server = NULL,   usageType = \"hours\",   from = NULL,   until = NULL,   interval = NULL )"},{"path":"https://rstudio.github.io/rsconnect/reference/showUsage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Show Application Usage — showUsage","text":"appDir Directory containing application. Defaults current working directory. appName Name application account Account name. single account registered system parameter can omitted. server Server name. Required use account name multiple servers. usageType Use metric retreive (example: \"hours\") Date range starting timestamp (Unix timestamp relative time delta \"2d\" \"3w\"). Date range ending timestamp (Unix timestamp relative time delta \"2d\" \"3w\"). interval Summarization interval. Data points intervals less grouped. (Relative time delta e.g. \"120s\" \"1h\" \"30d\").","code":""},{"path":"https://rstudio.github.io/rsconnect/reference/showUsage.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Show Application Usage — showUsage","text":"function works ShinyApps servers.","code":""},{"path":"https://rstudio.github.io/rsconnect/reference/showUsers.html","id":null,"dir":"Reference","previous_headings":"","what":"List authorized users for an application — showUsers","title":"List authorized users for an application — showUsers","text":"List authorized users application","code":""},{"path":"https://rstudio.github.io/rsconnect/reference/showUsers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List authorized users for an application — showUsers","text":"","code":"showUsers(appDir = getwd(), appName = NULL, account = NULL, server = NULL)"},{"path":"https://rstudio.github.io/rsconnect/reference/showUsers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List authorized users for an application — showUsers","text":"appDir Directory containing application. Defaults current working directory. appName Name application. account Account name. single account registered system parameter can omitted. server Server name. Required use account name multiple servers.","code":""},{"path":"https://rstudio.github.io/rsconnect/reference/showUsers.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"List authorized users for an application — showUsers","text":"function works ShinyApps servers.","code":""},{"path":[]},{"path":"https://rstudio.github.io/rsconnect/reference/syncAppMetadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Sync Application Metadata — syncAppMetadata","title":"Sync Application Metadata — syncAppMetadata","text":"Update metadata requested application across deployments","code":""},{"path":"https://rstudio.github.io/rsconnect/reference/syncAppMetadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sync Application Metadata — syncAppMetadata","text":"","code":"syncAppMetadata(appPath)"},{"path":"https://rstudio.github.io/rsconnect/reference/syncAppMetadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sync Application Metadata — syncAppMetadata","text":"appPath path directory file deployed.","code":""},{"path":"https://rstudio.github.io/rsconnect/reference/syncAppMetadata.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Sync Application Metadata — syncAppMetadata","text":"function update metadata Shiny rpubs apps","code":""},{"path":"https://rstudio.github.io/rsconnect/reference/taskLog.html","id":null,"dir":"Reference","previous_headings":"","what":"Show task log — taskLog","title":"Show task log — taskLog","text":"Writes task log given task","code":""},{"path":"https://rstudio.github.io/rsconnect/reference/taskLog.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show task log — taskLog","text":"","code":"taskLog(taskId, account = NULL, server = NULL, output = NULL)"},{"path":"https://rstudio.github.io/rsconnect/reference/taskLog.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Show task log — taskLog","text":"taskId Task Id account Account name. single account registered system parameter can omitted. server Server name. Required use account name multiple servers (see servers()) output write output. Valid values NULL stderr","code":""},{"path":[]},{"path":"https://rstudio.github.io/rsconnect/reference/taskLog.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Show task log — taskLog","text":"","code":"if (FALSE) {  # write task log to stdout taskLog(12345)  # write task log to stderr taskLog(12345, output=\"stderr\")  }"},{"path":"https://rstudio.github.io/rsconnect/reference/tasks.html","id":null,"dir":"Reference","previous_headings":"","what":"List Tasks — tasks","title":"List Tasks — tasks","text":"List Tasks","code":""},{"path":"https://rstudio.github.io/rsconnect/reference/tasks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List Tasks — tasks","text":"","code":"tasks(account = NULL, server = NULL)"},{"path":"https://rstudio.github.io/rsconnect/reference/tasks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List Tasks — tasks","text":"account Account name. single account registered system parameter can omitted. server Server name. Required use account name multiple servers (see servers())","code":""},{"path":"https://rstudio.github.io/rsconnect/reference/tasks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List Tasks — tasks","text":"Returns data frame following columns:","code":""},{"path":[]},{"path":"https://rstudio.github.io/rsconnect/reference/tasks.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List Tasks — tasks","text":"","code":"if (FALSE) {  # list tasks for the default account tasks()  }"},{"path":"https://rstudio.github.io/rsconnect/reference/terminateApp.html","id":null,"dir":"Reference","previous_headings":"","what":"Terminate an Application — terminateApp","title":"Terminate an Application — terminateApp","text":"Terminate archive currently deployed ShinyApps application.","code":""},{"path":"https://rstudio.github.io/rsconnect/reference/terminateApp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Terminate an Application — terminateApp","text":"","code":"terminateApp(appName, account = NULL, server = NULL, quiet = FALSE)"},{"path":"https://rstudio.github.io/rsconnect/reference/terminateApp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Terminate an Application — terminateApp","text":"appName Name application terminate account Account name. single account registered system parameter can omitted. server Server name. Required use account name multiple servers (see servers()) quiet Request status information printed console termination.","code":""},{"path":"https://rstudio.github.io/rsconnect/reference/terminateApp.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Terminate an Application — terminateApp","text":"function works ShinyApps servers.","code":""},{"path":[]},{"path":"https://rstudio.github.io/rsconnect/reference/terminateApp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Terminate an Application — terminateApp","text":"","code":"if (FALSE) {  # terminate an application terminateApp(\"myapp\") }"},{"path":"https://rstudio.github.io/rsconnect/reference/unsetProperty.html","id":null,"dir":"Reference","previous_headings":"","what":"Unset Application property — unsetProperty","title":"Unset Application property — unsetProperty","text":"Unset property currently deployed ShinyApps application (restoring default value)","code":""},{"path":"https://rstudio.github.io/rsconnect/reference/unsetProperty.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Unset Application property — unsetProperty","text":"","code":"unsetProperty(   propertyName,   appPath = getwd(),   appName = NULL,   account = NULL,   force = FALSE )"},{"path":"https://rstudio.github.io/rsconnect/reference/unsetProperty.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Unset Application property — unsetProperty","text":"propertyName Name property unset appPath Directory file deployed. Defaults current working directory. appName Name application account Account name. single account registered system parameter can omitted. force Forcibly unset property","code":""},{"path":"https://rstudio.github.io/rsconnect/reference/unsetProperty.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Unset Application property — unsetProperty","text":"function works ShinyApps servers.","code":""},{"path":"https://rstudio.github.io/rsconnect/reference/unsetProperty.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Unset Application property — unsetProperty","text":"","code":"if (FALSE) {  # unset application package cache property to revert to default unsetProperty(\"application.package.cache\")  }"},{"path":"https://rstudio.github.io/rsconnect/reference/writeManifest.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a manifest.json describing deployment requirements. — writeManifest","title":"Create a manifest.json describing deployment requirements. — writeManifest","text":"Given directory content targeted deployment, write manifest.json directory describing deployment requirements content.","code":""},{"path":"https://rstudio.github.io/rsconnect/reference/writeManifest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a manifest.json describing deployment requirements. — writeManifest","text":"","code":"writeManifest(   appDir = getwd(),   appFiles = NULL,   appPrimaryDoc = NULL,   contentCategory = NULL,   python = NULL,   forceGeneratePythonEnvironment = FALSE,   quarto = NULL,   image = NULL,   verbose = FALSE )"},{"path":"https://rstudio.github.io/rsconnect/reference/writeManifest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a manifest.json describing deployment requirements. — writeManifest","text":"appDir Directory containing content (Shiny application, R Markdown document, etc). appFiles Optional. full set files directories included future deployments content. Used computing dependency requirements. NULL, files appDir considered. appPrimaryDoc Optional. Specifies primary document content directory containing one. NULL, primary document inferred file list. contentCategory Optional. Specifies kind content deployed (e.g. \"plot\" \"site\"). python Optional. Full path Python binary use reticulate. specified Python binary invoked determine version list Python packages installed environment. python = NULL, RETICULATE_PYTHON set environment, value used. forceGeneratePythonEnvironment Optional. existing requirements.txt file found, overwritten argument TRUE. quarto Optional. Full path Quarto binary use deploying Quarto content. provided Quarto binary used run quarto inspect gather information content. image Optional. name image use building executing content. none provided, Posit Connect attempt choose image based content requirements. verbose TRUE, prints progress messages console","code":""},{"path":"https://rstudio.github.io/rsconnect/news/index.html","id":"rsconnect-0829","dir":"Changelog","previous_headings":"","what":"rsconnect 0.8.29","title":"rsconnect 0.8.29","text":"Introduced support publishing Posit Cloud. feature currently closed beta requires access enabled account Posit Cloud. See Posit Cloud’s Announcement information request access. Update company product names rebranding Posit.","code":""},{"path":"https://rstudio.github.io/rsconnect/news/index.html","id":"rsconnect-0828","dir":"Changelog","previous_headings":"","what":"rsconnect 0.8.28","title":"rsconnect 0.8.28","text":"CRAN release: 2022-10-24 Shiny applications Shiny documents longer include implicit dependency ragg package present local environment. reverts change introduced 0.8.27. Shiny applications add explicit dependency ragg (usually library(\"ragg\") statement) see used shiny::renderPlot (via shiny::plotPNG). documentation shiny::plotPNG explains use ragg. (#598) Fix bug prevented publishing writing manifests non-Quarto content Quarto path provided quarto argument writeManifest(), deployApp(), related functions. Escape account names performing directory search determine appropriate server. (#620)","code":""},{"path":"https://rstudio.github.io/rsconnect/news/index.html","id":"rsconnect-0827","dir":"Changelog","previous_headings":"","what":"rsconnect 0.8.27","title":"rsconnect 0.8.27","text":"CRAN release: 2022-07-12 Quarto content longer silently deploy R Markdown content Quarto metadata missing gathered. Functions error, requesting path Quarto binary quarto argument. (#594) Fix typo .rscignore. (#599) Quarto deployments specifying appDir quarto binary appPrimaryDoc work consistently. directory containing .qmd file deploy Quarto content instead failing, directory containing .Rmd file successfully deploy Quarto content instead falling back R Markdown. (#601) ragg package installed locally, now added implicit dependency shiny apps since shiny::renderPlot() now uses default (available). way, shiny apps won’t add library(ragg) get consistent (higher-quality) PNG images deployed. (#598)","code":""},{"path":"https://rstudio.github.io/rsconnect/news/index.html","id":"rsconnect-0826","dir":"Changelog","previous_headings":"","what":"rsconnect 0.8.26","title":"rsconnect 0.8.26","text":"CRAN release: 2022-05-31 Add ability resend shinyapps.io application invitations (#543) Show expiration status shinyapps.io invitations (#543) Allow shinyapps.io deployments private creation time (#403) Update minimum openssl version 2.0.0 enable publishing users FIPS-compliant systems without need API keys. (#452) Added Quarto support writeManifest, requires passing absolute path Quarto executable new quarto parameter Added quarto parameter deployApp enable deploying Quarto documents websites supplying path Quarto executable Added support deploying Quarto content uses jupyter runtime Added support selecting target image bundle manifest showLogs function takes server parameter. (#57) Added rsconnect.tar option, can used specify path tar implementation instead R’s internal implementation. previous method, using RSCONNECT_TAR environment variable, still works, new option take precedence set.","code":""},{"path":"https://rstudio.github.io/rsconnect/news/index.html","id":"rsconnect-0825","dir":"Changelog","previous_headings":"","what":"rsconnect 0.8.25","title":"rsconnect 0.8.25","text":"CRAN release: 2021-11-19 Use curl option -T uploading files avoid memory errors large files. (#544) rsconnect.max.bundle.size rsconnect.max.bundle.files options enforced processing enumerated set files. Previously, limits enforced bundling entire content directory. (#542) Preserve file time stamps copying files bundle staging directory, propagates created tar file. (#540) Configuration directories align CRAN policy use location named tools::R_user_dir. Configuration created earlier versions package automatically migrated new location. (#550)","code":""},{"path":"https://rstudio.github.io/rsconnect/news/index.html","id":"rsconnect-0824","dir":"Changelog","previous_headings":"","what":"rsconnect 0.8.24","title":"rsconnect 0.8.24","text":"CRAN release: 2021-08-05 Added support publishing Quarto documents websites Added support .rscignore file exclude files directories publishing (#368) Fixed issue causing missing value errors publishing content containing filenames extended characters (#514) Fixed issue preventing error tracebacks displaying (#518)","code":""},{"path":"https://rstudio.github.io/rsconnect/news/index.html","id":"rsconnect-0818","dir":"Changelog","previous_headings":"","what":"rsconnect 0.8.18","title":"rsconnect 0.8.18","text":"CRAN release: 2021-05-24 Fixed issue causing configuration directory left behind R CMD CHECK Fixed incorrect subdirectory nesting storing configuration R_USER_CONFIG_DIR Added linter different-case Markdown links (#388) Use new Packrat release CRAN, 0.6.0 (#501) Fix incorrect linter messages referring shiny.R instead server.R (#509) Warn, rather err, repository URL package dependency validated. allows deployment using archived CRAN packages, using packages installed source available server. (#508) Err app-mode inferred; seen empty directories/file-sets (#512) Add verbose option writeManifest utility (#468)","code":""},{"path":"https://rstudio.github.io/rsconnect/news/index.html","id":"rsconnect-0817","dir":"Changelog","previous_headings":"","what":"rsconnect 0.8.17","title":"rsconnect 0.8.17","text":"CRAN release: 2021-04-09 Fixed issue setting options(rsconnect.http.trace.json = TRUE) cause deployment errors HTTP transports (#490) Improve large bundles (file size count) detected (#464) RSCONNECT_TAR environment variable can used select tar implementation used create bundles (#446) Warn files owned users groups long names, can cause internal R tar implementation produce invalid archives (#446) Add support syncing deployment metadata server (#396) Insist ShinyApps accounts showUsers() (#398) Improve regex used browser browseURL lints include word boundary (#400) Fixed bug connectApiUser() set user id (#407) New arguments deployApp force generation Python environment file requirements.txt file (#409) Fail repository URL available dependent package (#410) Fix error old version package installed current version isn’t available (#431, #436) Fix error packages couldn’t found nonstandard contrib URLs. (#451, #457) Improve detection Shiny R Markdown files server.R present (#461) Fix failure write manifest package requires newer R version active version (#467) Increase default HTTP timeout non-Windows platforms (#476) Require packrat 0.5 later (#434) Fix error handling empty application / content lists (#417, #395) Calls writeManifest() longer reference packrat files generated manifest.json. packrat entries transient existed computing dependencies. (#472) Fix applications ShinyApps return size details (#496) GitLab seen valid SCM source (#491)","code":""},{"path":"https://rstudio.github.io/rsconnect/news/index.html","id":"rsconnect-0816","dir":"Changelog","previous_headings":"","what":"rsconnect 0.8.16","title":"rsconnect 0.8.16","text":"CRAN release: 2019-12-13 Prevent attempts deploy Connect applications without uploading (#145) Flag usage browser() debugging calls deploying (#196) Prevent accidental deployment Plumber APIs shinyapps.io (#204) Allow appId global deployment parameters deploySite (#231) Fix error running deployments() without registered accounts (#261) Omit renv files deployment bundle (#367) Fix failure deploy Packrat projects (#370) Fix issue deploying package exists multiple repos (#372) Honor RETICULATE_PYTHON writing manifests (#374) Add .failure user hook run function deployApp() fails (#375) Fix error showing non-streaming logs (#377) Use internally computed MD5 sums MD5 disabled FIPS mode (#378, #382) Make clearer log entries emitted RStudio Connect (#385) Add support requirements.txt Python, exists (#386) Restore compatibility R < 3.5 (#394) Add support authenticating Connect via API key rather token (#393)","code":""},{"path":"https://rstudio.github.io/rsconnect/news/index.html","id":"rsconnect-0815","dir":"Changelog","previous_headings":"","what":"rsconnect 0.8.15","title":"rsconnect 0.8.15","text":"CRAN release: 2019-07-22 Switch RCurl curl default HTTP backend (#325) Add purgeApp() function purge previously deployed shinyapps.io applications (#352)","code":""}]
